{"version":3,"sources":["reducers/reducer.js","models/Line.js","models/Square.js","utils.js","actions/actions.js","components/Canvas.js","index.js"],"names":["reducer","newState","state","action","type","payload","forEach","el","lined","square","centerX","x","centerY","y","Line","id","squareStart","squareEnd","color","draw","context","startX","startY","endX","endY","beginPath","strokeStyle","moveTo","lineTo","stroke","this","Square","fillStyle","fillRect","getRandomInt","min","max","Math","ceil","floor","random","getRandomRGBColor","r","g","b","add","toggle","move","connect","squares","actions","useState","canvas","setCanvas","setContext","boundings","setBoundings","current","setCurrent","useEffect","canvasNode","document","getElementById","getContext","getBoundingClientRect","drawAll","clearRect","width","height","length","i","thisSqr","otherSqr","line","checkIfCollide","mx","my","collide","filter","hitOnSquare","thisSquare","className","onMouseDown","event","mouseX","clientX","left","mouseY","clientY","top","onMouseUp","onMouseMove","onDoubleClick","hereIsAlreadySquare","randColor","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.053d6e9e.chunk.js","sourcesContent":["const reducer = (state = [], action) => {\r\n\r\n    let newState;\r\n\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            newState = [...state, action.payload];\r\n            return newState;\r\n\r\n        case 'TOGGLE':\r\n            newState = [...state];\r\n            newState.forEach((el) => {\r\n                if (el === action.payload) {\r\n                    el.lined = !el.lined;\r\n                }\r\n            });\r\n            return newState;\r\n        \r\n        case 'MOVE':\r\n            newState = [...state];\r\n            newState.forEach((el) => {\r\n                if (el === action.payload.square) {\r\n                    el.centerX = action.payload.x;\r\n                    el.centerY = action.payload.y;\r\n                }\r\n            });\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;","export default class Line {\r\n    constructor (id, squareStart, squareEnd, color) {\r\n        this.id = id;\r\n        this.color = color || \"black\";\r\n        this.context = null;\r\n        this.squareStart = squareStart;\r\n        this.squareEnd = squareEnd;\r\n    }\r\n\r\n    draw = () => {\r\n        if (!this.context) { return };\r\n\r\n        this.startX = this.squareStart.centerX;\r\n        this.startY = this.squareStart.centerY;\r\n        this.endX = this.squareEnd.centerX;\r\n        this.endY = this.squareEnd.centerY;\r\n\r\n        if (this.squareStart.lined === false || this.squareEnd.lined === false) { return };\r\n\r\n        this.context.beginPath();\r\n        this.context.strokeStyle = this.color;\r\n        this.context.moveTo(this.startX, this.startY);\r\n        this.context.lineTo(this.endX, this.endY);\r\n        this.context.stroke();\r\n    }\r\n}","export default class Square {\r\n    constructor (centerX, centerY, color) {\r\n        this.centerX = centerX;\r\n        this.centerY = centerY;\r\n        this.color = color || \"red\";\r\n        this.context = null;\r\n    }\r\n  \r\n    lined = true;\r\n  \r\n    draw = () => {\r\n        if (!this.context) { return };\r\n  \r\n        this.startX = this.centerX - 10;\r\n        this.startY = this.centerY - 20;\r\n        this.endX = this.centerX + 10;\r\n        this.endY = this.centerY + 20;\r\n  \r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.color; // square\r\n        this.context.fillRect(this.startX, this.startY, 20, 40);\r\n    }\r\n}","export const getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport const getRandomRGBColor = () => {\r\n    let red = getRandomInt(0, 257);\r\n    let green = getRandomInt(0, 257);\r\n    let blue = getRandomInt(0, 257);\r\n    return {r: red, g: green, b: blue};\r\n}","export const add = (square) => {\r\n    return { \r\n        type: 'ADD',\r\n        payload: square\r\n    }\r\n};\r\n\r\nexport const toggle = (square) => {\r\n    return { \r\n        type: 'TOGGLE',\r\n        payload: square\r\n    }\r\n};\r\n\r\nexport const move = (square, x, y) => {\r\n    return { \r\n        type: 'MOVE',\r\n        payload: { square, x, y }\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\nimport Line from '../models/Line';\nimport Square from '../models/Square';\nimport { connect } from 'react-redux';\nimport { getRandomRGBColor } from '../utils';\nimport * as actions from '../actions/actions';\n\nfunction Canvas({squares, toggle, move, add }) {\n  const [canvas, setCanvas] = useState();\n  const [context, setContext] = useState();\n  const [boundings, setBoundings] = useState();\n  const [current, setCurrent] = useState(null);\n\n  useEffect(() => {\n    let canvasNode = document.getElementById(\"canvas\");\n    setContext(canvasNode.getContext(\"2d\"));\n    setBoundings(canvasNode.getBoundingClientRect());\n    setCanvas(canvasNode);\n  }, []);\n  useEffect(() => {\n    // Обновляем заголовок документа, используя API браузера\n    drawAll();\n  });\n\n  const drawAll = () => {\n    if (!context || !canvas || !squares) { return }\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    squares.forEach((el) => {el.draw()});\n\n    if (squares.length > 1) {\n      let i = 1;\n      squares.forEach((thisSqr) => {\n        squares.forEach((otherSqr) => {\n          let line = new Line(i, thisSqr, otherSqr);\n          line.context = context;\n          line.draw();\n          i++;\n        })\n      });\n    }\n  }\n\n  const checkIfCollide = (mx, my) => {\n    let collide = false;\n    if (!squares) {return collide}\n    let squaresWithoutCurr = squares.filter((el) => { \n      return el !== current;\n    }); \n    squaresWithoutCurr.forEach((el) => {\n        if (mx + 10 > el.startX && mx < el.startX + 30) {\n            if (my + 20 > el.startY && my < el.startY + 60) {\n                collide = true;\n            }\n        }\n    });\n    return collide;\n  }\n\n  const hitOnSquare = (mx, my) => {\n    let thisSquare = null;\n    if (squares) {\n      squares.forEach((el) => {\n          if (mx > el.startX && mx < el.endX) {\n              if (my > el.startY && my < el.endY) {\n                  thisSquare = el;\n              }\n          }\n      });\n    }\n    return thisSquare;\n  }\n\n  const findRect = (event) => {\n    setCurrent(null);\n    let mouseX = event.clientX - boundings.left;\n    let mouseY = event.clientY - boundings.top;\n    setCurrent(hitOnSquare(mouseX, mouseY));\n  }\n\n  const moveRect = (event) => {\n    if (!boundings) { return }\n    let mouseX = event.clientX - boundings.left;\n    let mouseY = event.clientY - boundings.top;\n    if (current) {\n      if (!checkIfCollide(mouseX, mouseY)) {\n        move(current, mouseX, mouseY);\n      }\n    }\n  }\n\n  const createOrToggle = (event) => {\n    let mouseX = event.clientX - boundings.left;\n    let mouseY = event.clientY - boundings.top;\n    let hereIsAlreadySquare = hitOnSquare(mouseX, mouseY);\n    if (hereIsAlreadySquare) {\n      toggle(hereIsAlreadySquare);\n    }\n    if (!checkIfCollide(mouseX, mouseY)) {\n      let randColor = getRandomRGBColor();\n      let color = `rgb(${randColor.r},${randColor.g},${randColor.b})`;\n      let square = new Square(mouseX, mouseY, color);\n      square.context = context;\n      add(square);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Double click on canvas to add rect.</p>\n        <p>Double click on rect to toggle lines. You can move Rects.</p>\n        <canvas \n          id = \"canvas\" \n          width = {600} \n          height = {400}\n          onMouseDown = { findRect }\n          onMouseUp = { () => setCurrent(null) }\n          onMouseMove = { moveRect }\n          onDoubleClick = { createOrToggle }\n        />\n      </header>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    squares: state\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Canvas);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/reducer';\nimport Canvas from './components/Canvas';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Canvas />\n    </Provider>,\n document.getElementById('root'));"],"sourceRoot":""}